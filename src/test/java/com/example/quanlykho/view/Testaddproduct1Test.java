// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class Testaddproduct1Test {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void testaddproduct1() {
    // Test name: Test addproduct 1
    // Step # | name | target | value | comment
    // 1 | open | / |  | 
    driver.get("http://localhost:9091/");
    // 2 | setWindowSize | 1680x982 |  | 
    driver.manage().window().setSize(new Dimension(1680, 982));
    // 3 | click | linkText=Đăng nhập |  | 
    driver.findElement(By.linkText("Đăng nhập")).click();
    // 4 | type | id=form2Example18 | admin | 
    driver.findElement(By.id("form2Example18")).sendKeys("admin");
    // 5 | type | id=form2Example28 | admin | 
    driver.findElement(By.id("form2Example28")).sendKeys("admin");
    // 6 | click | id=form2Example18 |  | 
    driver.findElement(By.id("form2Example18")).click();
    // 7 | mouseOver | css=.btn |  | 
    {
      WebElement element = driver.findElement(By.cssSelector(".btn"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    // 8 | click | css=.btn |  | 
    driver.findElement(By.cssSelector(".btn")).click();
    // 9 | click | id=addBtn |  | 
    driver.findElement(By.id("addBtn")).click();
    // 10 | click | name=prCode |  | 
    driver.findElement(By.name("prCode")).click();
    // 11 | type | name=prCode | TPTS010 | 
    driver.findElement(By.name("prCode")).sendKeys("TPTS010");
    // 12 | type | name=prCode | TPTS011 | 
    driver.findElement(By.name("prCode")).sendKeys("TPTS011");
    // 13 | click | name=prName |  | 
    driver.findElement(By.name("prName")).click();
    // 14 | click | name=prName |  | 
    driver.findElement(By.name("prName")).click();
    // 15 | type | name=prName | áo m | 
    driver.findElement(By.name("prName")).sendKeys("áo m");
    // 16 | type | name=prName | áo polo | 
    driver.findElement(By.name("prName")).sendKeys("áo polo");
    // 17 | click | name=prPrice |  | 
    driver.findElement(By.name("prPrice")).click();
    // 18 | type | name=prPrice | 4000 | 
    driver.findElement(By.name("prPrice")).sendKeys("4000");
    // 19 | click | css=.text-dark:nth-child(9) |  | 
    driver.findElement(By.cssSelector(".text-dark:nth-child(9)")).click();
    // 20 | click | name=prQuantity |  | 
    driver.findElement(By.name("prQuantity")).click();
    // 21 | type | name=prQuantity | 12 | 
    driver.findElement(By.name("prQuantity")).sendKeys("12");
    // 22 | click | name=prImg |  | 
    driver.findElement(By.name("prImg")).click();
    // 23 | click | name=prImg |  | 
    driver.findElement(By.name("prImg")).click();
    // 24 | click | name=prImg |  | 
    driver.findElement(By.name("prImg")).click();
    // 25 | doubleClick | name=prImg |  | 
    {
      WebElement element = driver.findElement(By.name("prImg"));
      Actions builder = new Actions(driver);
      builder.doubleClick(element).perform();
    }
    // 26 | click | name=prImg |  | 
    driver.findElement(By.name("prImg")).click();
    // 27 | click | name=prImg |  | 
    driver.findElement(By.name("prImg")).click();
    // 28 | type | name=prImg | https://vinmec-prod.s3.amazonaws.com/images/20190606_120002_041483_ca-rot.max-800x800.png | 
    driver.findElement(By.name("prImg")).sendKeys("https://vinmec-prod.s3.amazonaws.com/images/20190606_120002_041483_ca-rot.max-800x800.png");
    // 29 | click | name=prDateInput |  | 
    driver.findElement(By.name("prDateInput")).click();
    // 30 | type | name=prDateInput | 2023-12-08 | 
    driver.findElement(By.name("prDateInput")).sendKeys("2023-12-08");
    // 31 | click | name=prDetail |  | 
    driver.findElement(By.name("prDetail")).click();
    // 32 | type | name=prDetail | áo mẫu mới  | 
    driver.findElement(By.name("prDetail")).sendKeys("áo mẫu mới ");
    // 33 | click | id=addProductBtn |  | 
    driver.findElement(By.id("addProductBtn")).click();
    // 34 | click | linkText=Sản phẩm |  | 
    driver.findElement(By.linkText("Sản phẩm")).click();
    // 35 | click | linkText=2 |  | 
    driver.findElement(By.linkText("2")).click();
    // 36 | click | css=.even > td > .btn-danger |  | 
    driver.findElement(By.cssSelector(".even > td > .btn-danger")).click();
    // 37 | click | css=#confirmDeleteModal48 .close |  | 
    driver.findElement(By.cssSelector("#confirmDeleteModal48 .close")).click();
    // 38 | click | css=.copyright |  | 
    driver.findElement(By.cssSelector(".copyright")).click();
  }
}
